(* Florian Thibord  --  Projet CERCLES *)

(* Extraction des registres, 
   Vérification que les opérations sont atomiques?
   Différentier pre/post conditions *)

open Ast_repr
open Ast_norm_repr


(* ATTENTION AUX TUPLES !!*) 

let handle_register eq node_out = ()


let handle_assert asser node_out = ()



let folder eq_list node_out =
  (* Parcours de eq_list, et pour chaque eq :
     si Assert -> vérifier que sur un seul ident, puis regarder si param_in ou param_out
     si FBY -> vérifier que c'est : C -> pre X . Puis céer registre x, type, C.
     Vérifier Atomicité: en parcourant et en recréant l'arbre? 
  *)


let main ast main =
  let node_out = ref
    { id = main.id;
      param_in = main.param_in;
      param_out = main.param_out;
      vars = main.vars;
      reg = [];
      pre = [];
      post = [];
      eqs = []; } in
(* extraction du main *)
(* appel fold eq_list *) () 
