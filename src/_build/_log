### Starting build.
# Target: cercles.ml.depends, tags: { annot, debug, extension:ml, file:cercles.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules cercles.ml > cercles.ml.depends # cached
# Target: ast_repr.ml.depends, tags: { annot, debug, extension:ml, file:ast_repr.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules ast_repr.ml > ast_repr.ml.depends # cached
# Target: ast_base.ml.depends, tags: { annot, debug, extension:ml, file:ast_base.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules ast_base.ml > ast_base.ml.depends # cached
# Target: ast_base.cmo, tags: { annot, byte, compile, debug, extension:ml, file:ast_base.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o ast_base.cmo ast_base.ml # cached
# Target: ast_repr.cmo, tags: { annot, byte, compile, debug, extension:ml, file:ast_repr.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o ast_repr.cmo ast_repr.ml # cached
# Target: lexer.mll, tags: { annot, debug, extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { annot, debug, extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { annot, debug, extension:mly, file:parser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc parser.mly
# Target: parser.mli.depends, tags: { annot, debug, extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { annot, byte, compile, debug, extension:mli, file:parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { annot, byte, compile, debug, extension:ml, file:lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o lexer.cmo lexer.ml # cached
# Target: normalizer.ml.depends, tags: { annot, debug, extension:ml, file:normalizer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules normalizer.ml > normalizer.ml.depends # cached
# Target: ast_norm_repr.ml.depends, tags: { annot, debug, extension:ml, file:ast_norm_repr.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules ast_norm_repr.ml > ast_norm_repr.ml.depends # cached
# Target: ast_norm_repr.cmo, tags: { annot, byte, compile, debug, extension:ml, file:ast_norm_repr.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o ast_norm_repr.cmo ast_norm_repr.ml # cached
# Target: normalizer.cmo, tags: { annot, byte, compile, debug, extension:ml, file:normalizer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o normalizer.cmo normalizer.ml # cached
# Target: cercles.cmo, tags: { annot, byte, compile, debug, extension:ml, file:cercles.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -g -annot -o cercles.cmo cercles.ml # cached
# Target: ast_base.cmx, tags: { annot, compile, debug, extension:ml, file:ast_base.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o ast_base.cmx ast_base.ml # cached
# Target: ast_repr.cmx, tags: { annot, compile, debug, extension:ml, file:ast_repr.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o ast_repr.cmx ast_repr.ml # cached
# Target: parser.ml.depends, tags: { annot, debug, extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { annot, compile, debug, extension:ml, file:parser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o parser.cmx parser.ml
# Target: ast_norm_repr.cmx, tags: { annot, compile, debug, extension:ml, file:ast_norm_repr.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o ast_norm_repr.cmx ast_norm_repr.ml # cached
# Target: normalizer.cmx, tags: { annot, compile, debug, extension:ml, file:normalizer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o normalizer.cmx normalizer.ml # cached
# Target: lexer.cmx, tags: { annot, compile, debug, extension:ml, file:lexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o lexer.cmx lexer.ml
# Target: cercles.cmx, tags: { annot, compile, debug, extension:ml, file:cercles.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -g -annot -o cercles.cmx cercles.ml
+ /usr/bin/ocamlopt -c -g -annot -o cercles.cmx cercles.ml
File "cercles.ml", line 57, characters 8-13:
Warning Y: unused variable ast_n.
# Target: cercles.native, tags: { annot, debug, dont_link_with, extension:native, file:cercles.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt unix.cmxa nums.cmxa -g ast_base.cmx ast_norm_repr.cmx ast_repr.cmx parser.cmx lexer.cmx normalizer.cmx cercles.cmx -o cercles.native
# Compilation successful.
